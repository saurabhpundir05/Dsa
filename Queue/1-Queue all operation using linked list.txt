//Queue all operation using linked list
#include <iostream>
using namespace std;
class node{
    public:
    int data;
    node* next;
    node(int val){
        data=val;
        next=NULL;
    }
};
class queue{
  node* front;
  node* rear;
  public:
  queue(){
      front=NULL;
      rear=NULL;
  }
 void enqueue(int x){
     node* n=new node(x);
     if(front == NULL){
         rear=n;
         front=n;
         return;
     }
     rear->next=n;
     rear=n;
 }
void dequeue(){
    if(front == NULL){
        cout<<"Queue Underflow"<<endl;
        return;
    }
    node* temp=front;
    front=front->next;
    delete temp;
}
int peek(){
     if(front == NULL){
        cout<<"Queue Underflow"<<endl;
        return -1;
    }
    return front->data;
}
bool isempty(){
    return (front == NULL);
}
};
int main(){
    queue q;
    q.enqueue(1);
    q.enqueue(2);
    q.enqueue(3);
    q.enqueue(4);
    cout<<q.peek()<<endl;
    q.dequeue();
    q.dequeue();
    q.dequeue();
    q.dequeue();
    q.enqueue(2);
    cout<<q.peek()<<endl;
    cout<<q.isempty()<<endl;
    return 0;
}